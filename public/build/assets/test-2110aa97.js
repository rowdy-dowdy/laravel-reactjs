import{R as d,I as r}from"./main-ea3bcec7.js";const f=d((o,a)=>({isLoad:!1,tests:[],loadTests:async()=>{const{tests:e}=await r("/api/tests").catch(t=>({tests:[]}));console.log("fasdf");let s=e.filter(t=>!a().tests.some(n=>n.id==t.id));o(t=>({tests:[...t.tests,...s],isLoad:!0}))},findTest:async e=>{let s=a().tests.find(t=>t.code==e)||null;if(!s||s.test_histories==null||s.test_histories==null){let t=(await r(`/api/tests/${e}`).catch(i=>({test:null}))).test,n=s?a().tests.map(i=>i.id==t.id?t:i):[...a().tests,t];return o({tests:n}),t}return s},findQuestion:async e=>{const s=await a().findTest(e);if(!s)return{test:null,questions:[]};let t=s.questions||[];return t.length==0&&(t=(await r(`/api/tests/${e}/questions`).catch(n=>({questions:[]}))).questions,o(n=>({tests:n.tests.map(i=>({...i,questions:s.id==i.id?t:i.questions}))}))),{test:s,questions:t}},findHistory:async(e,s)=>{var i;const t=await a().findTest(e);if(!t)return{test:null,history:null};let n=((i=t.test_histories)==null?void 0:i.find(u=>u.id==s))||null;return{test:t,history:n}},addTestHistory:async(e,s)=>{const t=await a().findTest(e);t&&o(n=>({tests:n.tests.map(i=>({...i,test_histories:t.id==i.id?[s,...i.test_histories||[]]:i.test_histories}))}))},dispatch:e=>o(s=>typeof e=="function"?e(s):e)}));export{f as u};
